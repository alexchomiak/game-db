[{"/home/alex/cs480/cs480-final-project/client/src/index.tsx":"1","/home/alex/cs480/cs480-final-project/client/src/App.tsx":"2","/home/alex/cs480/cs480-final-project/client/src/pages/Auth.tsx":"3","/home/alex/cs480/cs480-final-project/client/src/components/AuthForm.tsx":"4"},{"size":244,"mtime":1607465572460,"results":"5","hashOfConfig":"6"},{"size":168,"mtime":1607464600180,"results":"7","hashOfConfig":"6"},{"size":733,"mtime":1607466165150,"results":"8","hashOfConfig":"6"},{"size":1881,"mtime":1607466041820,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"eyud5y",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/home/alex/cs480/cs480-final-project/client/src/index.tsx",[],["21","22"],"/home/alex/cs480/cs480-final-project/client/src/App.tsx",[],"/home/alex/cs480/cs480-final-project/client/src/pages/Auth.tsx",["23"],"import React, { FC, useState } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { AuthForm } from \"../components/AuthForm\";\nexport const Auth: FC = () => {\n  return (\n    <>\n      <Tabs defaultActiveKey=\"login\">\n        <Tab eventKey=\"login\" title=\"Login\">\n          <AuthForm\n            type=\"login\"\n            onSubmit={async (e) => {\n              // TODO: write post request\n            }}\n          ></AuthForm>\n        </Tab>\n        <Tab eventKey=\"register\" title=\"Register\">\n          <AuthForm\n            type=\"register\"\n            onSubmit={async (e) => {\n              // TODO: write post request\n            }}\n          ></AuthForm>\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\nexport default Auth;\n","/home/alex/cs480/cs480-final-project/client/src/components/AuthForm.tsx",["24","25","26","27"],"import React, { useState, FC } from \"react\";\nimport {\n  Form,\n  FormControl,\n  FormGroup,\n  Label,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\ninterface AuthCreds {\n  email: string;\n  password: string;\n  firstName?: string;\n  lastName?: string;\n}\ninterface AuthFormProps {\n  type: string;\n  onSubmit: (v: AuthCreds) => void;\n}\nexport const AuthForm: FC<AuthFormProps> = ({ type, onSubmit }) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [firstName, setFirstName] = useState<string>(\"\");\n  const [lastName, setLastName] = useState<string>(\"\");\n  return (\n    <>\n      <Form>\n        {type == \"register\" && (\n          <>\n            <FormGroup>\n              <FormControl\n                placeholder=\"Enter First Name\"\n                value={firstName}\n                onChange={(e) =>\n                  setFirstName((e.target as HTMLInputElement).value)\n                }\n              ></FormControl>\n            </FormGroup>\n            <FormGroup>\n              <FormControl\n                value={lastName}\n                placeholder=\"Enter Last Name\"\n                onChange={(e) =>\n                  setLastName((e.target as HTMLInputElement).value)\n                }\n              ></FormControl>\n            </FormGroup>\n          </>\n        )}\n\n        <FormGroup>\n          <FormControl\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail((e.target as HTMLInputElement).value)}\n          ></FormControl>\n        </FormGroup>\n        <FormGroup>\n          <FormControl\n            value={password}\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword((e.target as HTMLInputElement).value)}\n          ></FormControl>\n        </FormGroup>\n      </Form>\n    </>\n  );\n};\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":21,"nodeType":"34","messageId":"35","endLine":1,"endColumn":29},{"ruleId":"32","severity":1,"message":"36","line":6,"column":3,"nodeType":"34","messageId":"35","endLine":6,"endColumn":8},{"ruleId":"32","severity":1,"message":"37","line":7,"column":3,"nodeType":"34","messageId":"35","endLine":7,"endColumn":6},{"ruleId":"32","severity":1,"message":"38","line":8,"column":3,"nodeType":"34","messageId":"35","endLine":8,"endColumn":7},{"ruleId":"39","severity":1,"message":"40","line":28,"column":15,"nodeType":"41","messageId":"42","endLine":28,"endColumn":17},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]